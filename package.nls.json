{
  "ext.command.createConfigFile.title": "Prettier: Create Configuration File",
  "ext.command.forceFormatDocument.title": "Format Document (Forced)",
  "ext.config.arrowParens": "Include parentheses around a sole arrow function parameter",
  "ext.config.bracketSpacing": "Controls the printing of spaces inside object literals",
  "ext.config.configPath": "Path to the prettier configuration file",
  "ext.config.disableLanguages": "A list of languages IDs to disable this extension on",
  "ext.config.disableLanguagesDeprecation": "This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.",
  "ext.config.documentSelectors": "A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter",
  "ext.config.endOfLine": "Specify the end of line used by prettier",
  "ext.config.htmlWhitespaceSensitivity": "Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.",
  "ext.config.ignorePath": "Path to a .prettierignore file",
  "ext.config.insertPragma": "Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.",
  "ext.config.singleAttributePerLine": "If true, enforces single attribute per line in HTML, Vue and JSX.",
  "ext.config.bracketSameLine": "If true, puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
  "ext.config.jsxBracketSameLine": "If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
  "ext.config.jsxBracketSameLineDeprecation": "This option has been deprecated in v2.4.0, use `bracketSameLine` instead.",
  "ext.config.jsxSingleQuote": "Use single quotes instead of double quotes in JSX",
  "ext.config.packageManager": "The package manager you use to install node modules.",
  "ext.config.packageManagerDeprecation": "Package manager is now automatically detected by VS Code. This setting is no longer used.",
  "ext.config.parser": "Override the parser. You shouldn't have to change this setting.",
  "ext.config.parserDeprecationMessage": "This setting is no longer supported. Use a prettier configuration file instead.",
  "ext.config.prettierPath": "Path to the prettier module",
  "ext.config.printWidth": "Fit code within this line limit",
  "ext.config.proseWrap": "(Markdown) wrap prose over multiple lines",
  "ext.config.quoteProps": "Change when properties in objects are quoted",
  "ext.config.requireConfig": "Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._",
  "ext.config.requirePragma": "Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.",
  "ext.config.resolveGlobalModules": "When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._",
  "ext.config.withNodeModules": "If true, this extension will process files in node_modules",
  "ext.config.semi": "Whether to add a semicolon at the end of every line",
  "ext.config.singleQuote": "If true, will use single instead of double quotes",
  "ext.config.tabWidth": "Number of spaces it should use per tab",
  "ext.config.title": "Prettier",
  "ext.config.trailingComma": "Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)",
  "ext.config.useEditorConfig": "Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.",
  "ext.config.useTabs": "Indent lines with tabs",
  "ext.config.vueIndentScriptAndStyle": "Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files.",
  "ext.config.embeddedLanguageFormatting": "Control whether Prettier formats quoted code embedded in the file.",
  "ext.config.enable": "Controls whether prettier is enabled or not.",
  "ext.config.enableDebugLogs": "Enable debug logs for troubleshooting.",
  "ext.capabilities.untrustedWorkspaces.description": "Only the built-in version of Prettier will be used when running in untrusted mode."
}

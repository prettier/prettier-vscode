{
  "ext.command.createConfigFile.title": "Prettier：选择配置文件",
  "ext.command.forceFormatDocument.title": "格式化文件（强制）",
  "ext.config.arrowParens": "箭头函数仅有一个参数时，参数是否添加括号。",
  "ext.config.bracketSpacing": "在对象字面量的花括号内侧使用空格作为间隔。",
  "ext.config.configPath": "指定 Prettier 配置文件的路径。",
  "ext.config.documentSelectors": "指定一个 [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) 列表，使匹配的文件也启用 Prettier。",
  "ext.config.endOfLine": "指定 Prettier 使用的换行符。",
  "ext.config.htmlWhitespaceSensitivity": "指定 HTML 文件的[空白字符敏感度](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting)。\n可选项：\n- `css` - 以 CSS 的 `display` 属性为准。\n- `strict` - 空白字符敏感。\n- `ignore` - 空白字符不敏感。",
  "ext.config.ignorePath": "指定 `.prettierignore` 文件路径。",
  "ext.config.insertPragma": "Prettier 可以在文件头部插入特定的 `@format` 标记以表示该文件已被 Prettier 格式化过。该选项一般和 `--require-pragma` 选项配合使用。如果文件头部已有 docblock 注释，则会在其之后新增一行并插入 `@format` 标记。",
  "ext.config.singleAttributePerLine": "会在 HTML、JSX、Vue 和 Angular 中格式化为每个属性单独占一行。",
  "ext.config.bracketSameLine": "会把多行的 HTML (包括 HTML、JSX、Vue 和 Angular) 元素的 `>` 放在最后一个属性的末尾，而不是另起一行（自闭合标签不受该选项控制）。",
  "ext.config.jsxSingleQuote": "JSX 中使用单引号而不是双引号。",
  "ext.config.prettierPath": "`prettier` 包路径，如 `./node_modules/prettier`。",
  "ext.config.printWidth": "每行代码的长度限制。",
  "ext.config.proseWrap": "（ Markdown ） 文本换行。",
  "ext.config.quoteProps": "指定对象字面量中的属性名引号添加方式。\n可选项： \n- `as-needed` - 只在需要的情况下加引号。\n- `consistent` - 有一个需要引号就给其他都统一加上。\n - `preserve` - 保留用户输入的引号。",
  "ext.config.requireConfig": "Prettier 配置文件（如 `.prettierrc`）必须存在。详见 [配置文件的文档说明](https://prettier.io/docs/en/configuration.html)。\n\n_注意：未命名文件仍会使用 `VS Code` 的 `setting.json` 中的配置进行格式化，不受该选项影响。_",
  "ext.config.requirePragma": "Prettier 可以限制只对包含特定注释的文件进行格式化，这个特定的注释称为 pragma。这对于那些大型的、尚未采用 Prettier 的代码仓库逐步引入 Prettier 非常有用。",
  "ext.config.resolveGlobalModules": "如果在当前项目中找不到 `prettier` 包时尝试使用 npm 或 yarn 全局安装的包。\n>_该设置可能影响性能，特别是在 Windows 中挂载了网络磁盘的时候。只有在你需要使用全局安装的包时再启用。_",
  "ext.config.withNodeModules": "允许 Prettier 格式化 `node_modules` 中的文件。",
  "ext.config.semi": "在所有代码语句的末尾添加分号。",
  "ext.config.singleQuote": "使用单引号而不是双引号。",
  "ext.config.tabWidth": "指定一个制表符等于的空格数。",
  "ext.config.title": "Prettier",
  "ext.config.trailingComma": "指定添加尾后逗号的方式。\n选项：\n- `none` - 无尾后逗号。\n- `es5` - 在 ES5 中有效的尾后逗号（如对象与数组等）。\n- `all` - 尽可能添加尾后逗号（如函数的参数列表）。",
  "ext.config.useEditorConfig": "使用 `.editorconfig` 中的配置选项。详见 [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) 文档。",
  "ext.config.useTabs": "使用制表符缩进，而不是空格缩进。",
  "ext.config.vueIndentScriptAndStyle": "缩进 Vue SFC 文件中的 `<script>` 和 `<style>` 标签。",
  "ext.config.embeddedLanguageFormatting": "控制嵌入的其他语言代码格式化。",
  "ext.config.enable": "启用 Prettier。",
  "ext.config.enableDebugLogs": "启用调试日志。",
  "ext.capabilities.untrustedWorkspaces.description": "在不受信任模式下只会使用内置的 Prettier 版本。"
}
